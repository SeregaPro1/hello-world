import logging
from aiogram import Bot, Dispatcher, types, executor

logging.basicConfig(level=logging.INFO)

bot = Bot(token="6387525467:AAHnuNG4cQcYABM-BzsJUzJ0hzmIp-i2Pek")
dp = Dispatcher(bot)

# –ö–∞—Ç–∞–ª–æ–≥
mainkey = types.InlineKeyboardMarkup()
key = types.InlineKeyboardButton(text="–ü—Ä–∏–≤–∞—Ç ", callback_data='vip')
mainkey.row(key)
# –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥, –ø–æ–∫—É–ø–∫–∞
startkey = types.InlineKeyboardMarkup()
back1 = types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="back")
buy1 = types.InlineKeyboardButton(text="–ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø üí≥", callback_data="buy")
startkey.row(back1, buy1)


@dp.message_handler(commands=['start'])
async def starting(message: types.Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, {message.from_user.username}")
    await message.answer("–ß—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ç–∞—Ä–∏—Ñ–∞–º–∏, –≤—ã–±–µ—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É",
                         reply_markup=mainkey)


@dp.callback_query_handler(lambda c: c.data == 'vip')
async def call_back(call: types.CallbackQuery):
    await call.message.edit_text("–ü—Ä–∏–≤–∞—Ç–∫–∞ - —ç—Ç–æ –∫–∞–Ω–∞–ª —Å —á–∞—Å—Ç—ã–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –∏ —Ç–¥ ", reply_markup=startkey)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)